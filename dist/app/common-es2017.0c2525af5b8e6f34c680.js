"use strict";(self.webpackChunkverifik_sdk_app=self.webpackChunkverifik_sdk_app||[]).push([[592],{89596:function(e,s,t){t.d(s,{u:function(){return u}});var a=t(34553),r=t(93096),n=t(26215),c=t(37716),o=t(92930);const i=["ft.fsh","ft.ic","zoom.installationID","zoom.lk"],l={[FaceTecSDK.FaceTecSessionStatus.CameraNotEnabled]:"Camera_error",[FaceTecSDK.FaceTecSessionStatus.CameraNotRunning]:"Camera_error",[FaceTecSDK.FaceTecSessionStatus.UserCancelled]:"Cancel_biometrics"};let u=(()=>{class e{constructor(e){return this._service=e,this._isReady=new n.X(null),this._auth=new n.X(null),this._liveness=new n.X(null),this._onboardingBiometric=new n.X(null),this._onboardingScan=new n.X(null),this._error=new n.X(null),FaceTecSDK.getStatus()||this._loadConfig(),this}get isReady$(){return this._isReady.asObservable()}get auth$(){return this._auth.asObservable()}get liveness$(){return this._liveness.asObservable()}get onboardingBiometric$(){return this._onboardingBiometric.asObservable()}get onboardingScan$(){return this._onboardingScan.asObservable()}get error$(){return this._error.asObservable()}getStatus(){const e=FaceTecSDK.getStatus();return console.group("==== Biometrics ===="),console.info("status",e),console.groupEnd(),e}_loadConfig(){i.forEach(e=>{localStorage.removeItem(e)}),indexedDB.deleteDatabase("FTIDB"),FaceTecSDK.setResourceDirectory("/assets/core/sdk/resources"),this._service.getConfig().subscribe(e=>{const s="string"==typeof e.data?JSON.parse(e.data):e.data;(0,r.v6)(FaceTecSDK),console.log(s),FaceTecSDK.initializeInProductionMode(s[0],s[1],s[2],e=>{console.group("==== Biometrics ===="),console.info("LibraryReady",e),console.groupEnd(),e&&(this.currentLanguage=localStorage.getItem("lang")||"es",FaceTecSDK.configureLocalization(r.Mj[this.currentLanguage])),this._isReady.next(e)})})}startLanguage(){const e=localStorage.getItem("lang")||"es";this.currentLanguage!==e&&(this.currentLanguage=e,FaceTecSDK.configureLocalization(r.Mj[e]))}_startSession(){var e=this;return(0,a.Z)(function*(){e.startLanguage();const s=FaceTecSDK.createFaceTecAPIUserAgentString("");return yield new Promise((t,a)=>{e._service.getSession(s).subscribe(e=>t(e.data),a)})})()}startAuth(e){var s=this;return(0,a.Z)(function*(){const t=yield s._startSession();new g({externalDatabaseRefId:e,type:"login",token:t,callback:(e,t)=>{if(e)return s._error.next(e.message);console.log(t),s._auth.next(t)}},s._service)})()}startLiveness(){var e=this;return(0,a.Z)(function*(){const s=yield e._startSession();new g({type:"liveness",token:s,callback:(s,t)=>{if(s)return e._error.next(s.message);e._liveness.next(t)}},e._service)})()}startEnrollmentBiometrics(e,s){var t=this;return(0,a.Z)(function*(){const a=yield t._startSession();new g({externalDatabaseRefId:e,group:s,type:"match3d2d",token:a,callback:(e,s)=>{if(e)return t._error.next(e.message);console.log(s),t._onboardingBiometric.next(s)}},t._service)})()}startEnrollmentDocument(e){var s=this;return(0,a.Z)(function*(){const t=localStorage.getItem("jwtToken");if(!t)return void console.error("JWT token not found in localStorage");const r=yield s._startSession(),n=function(){var e=(0,a.Z)(function*(e,t){const a=JSON.stringify(e);try{const r=yield fetch("https://remipay.softwow.com.co/data-verify-3d-liveness",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:a});if(!r.ok)throw new Error("Network response was not ok");const n=yield r.json();console.log("Response from server:",n),window.open("https://remipay.softwow.com.co/login"),s._onboardingScan.next(e)}catch(r){console.error("Fetch error:",r),s._error.next(r.message)}});return function(s,t){return e.apply(this,arguments)}}();new S({externalDatabaseRefId:e,token:r,callback:(e,a)=>{if(e)return s._error.next(e.message);console.log("adasd",a),n(a,t),s._onboardingScan.next(a)}},s._service)})()}startIdScan(e){var s=this;return(0,a.Z)(function*(){const t=yield s._startSession();new d({externalDatabaseRefId:e,token:t,callback:(e,t)=>{if(e)return s._error.next(e.message);s._onboardingScan.next(t)}},s._service)})()}}return e.\u0275fac=function(s){return new(s||e)(c.LFG(o.x))},e.\u0275prov=c.Yz7({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();class g{constructor(e,s){this.config=e,this._service=s,this.onFaceTecSDKCompletelyDone=()=>{!this.response&&!this.error&&(this.error={message:"BiometricValiation_failed"}),this.config.callback(this.error,this.response)},new FaceTecSDK.FaceTecSession(this,e.token)}processSessionResultWhileFaceTecSDKWaits(e,s){var t;if(FaceTecSDK,e.status!==FaceTecSDK.FaceTecSessionStatus.SessionCompletedSuccessfully)return this.error={message:null!==(t=l[e.status])&&void 0!==t?t:"Session_end"},s.cancel();const a={faceScan:e.faceScan,auditTrailImage:e.auditTrail[0],lowQualityAuditTrailImage:e.lowQualityAuditTrail[0],sessionId:e.sessionId,externalDatabaseRefID:this.config.externalDatabaseRefId};this.config.group&&(a.group=this.config.group);const r=FaceTecSDK.createFaceTecAPIUserAgentString(e.sessionId);this.error=null,this.token=null;const n=e=>(this.response=e.data,s.proceedToNextStep(e.data.scanResultBlob)),c=e=>{this.error=e.error,s.cancel()};switch(this.config.type){case"login":FaceTecSDK.FaceTecCustomization.setOverrideResultScreenSuccessMessage("Autenticado"),this._service.authenticate(r,a).subscribe(n,c);break;case"match3d2d":FaceTecSDK.FaceTecCustomization.setOverrideResultScreenSuccessMessage("match3d2d"),this._service.photoIDMatch(r,a).subscribe(n,c);break;case"onboarding":FaceTecSDK.FaceTecCustomization.setOverrideResultScreenSuccessMessage("Registro"),this._service.enrollment(r,a).subscribe(n,c);break;case"enrollment3d":FaceTecSDK.FaceTecCustomization.setOverrideResultScreenSuccessMessage("Valido"),this._service.liveness(r,a).subscribe(n,c)}}}class S{constructor(e,s){this.config=e,this._service=s,this.onFaceTecSDKCompletelyDone=()=>{!this.response&&!this.error&&(this.error={message:"BiometricValiation_failed"}),this.config.callback(this.error,this.response)},new FaceTecSDK.FaceTecSession(this,this.config.token)}processSessionResultWhileFaceTecSDKWaits(e,s){var t;if(this.latestSessionResult=e,e.status!==FaceTecSDK.FaceTecSessionStatus.SessionCompletedSuccessfully)return this.error={message:null!==(t=l[e.status])&&void 0!==t?t:"Session_end"},s.cancel();const a={faceScan:e.faceScan,auditTrailImage:e.auditTrail[0],lowQualityAuditTrailImage:e.lowQualityAuditTrail[0],sessionId:e.sessionId,externalDatabaseRefID:this.config.externalDatabaseRefId};this.config.group&&(a.group=this.config.group);const r=FaceTecSDK.createFaceTecAPIUserAgentString(e.sessionId);this.error=null,this._service.enrollment(r,a).subscribe(e=>(FaceTecSDK.FaceTecCustomization.setOverrideResultScreenSuccessMessage("Registro"),s.proceedToNextStep(e.data.scanResultBlob)),e=>{this.error=e.error,s.cancel()})}processIDScanResultWhileFaceTecSDKWaits(e,s){if(this.latestIDScanResult=e,e.status!==FaceTecSDK.FaceTecIDScanStatus.Success)return void s.cancel();var t={idScan:e.idScan,sessionId:e.sessionId,externalDatabaseRefID:this.config.externalDatabaseRefId};e.frontImages&&e.frontImages[0]&&(t.idScanFrontImage=e.frontImages[0]),e.backImages&&e.backImages[0]&&(t.idScanBackImage=e.backImages[0]),this.error=null;const a=FaceTecSDK.createFaceTecAPIUserAgentString(this.latestSessionResult.sessionId);this._service.photoIDMatch(a,t).subscribe(e=>(this.response=e.data,FaceTecSDK.FaceTecCustomization.setOverrideResultScreenSuccessMessage(""),s.proceedToNextStep(e.data.scanResultBlob)),e=>{this.error=e.error,s.cancel()})}}class d{constructor(e,s){this.config=e,this._service=s,this.onFaceTecSDKCompletelyDone=()=>{!this.response&&!this.error&&(this.error={message:"BiometricValiation_failed"}),this.config.callback(this.error,this.response)},new FaceTecSDK.FaceTecSession(this,this.config.token)}processIDScanResultWhileFaceTecSDKWaits(e,s){if(e.status!==FaceTecSDK.FaceTecIDScanStatus.Success)return void s.cancel();var t={externalDatabaseRefID:this.config.externalDatabaseRefId,idScan:e.idScan};e.frontImages&&e.frontImages[0]&&(t.idScanFrontImage=e.frontImages[0]),e.backImages&&e.backImages[0]&&(t.idScanBackImage=e.backImages[0]),this.error=null;const a=FaceTecSDK.createFaceTecAPIUserAgentString(e.sessionId);this._service.idScan(a,t).subscribe(e=>(this.response=e.data,FaceTecSDK.FaceTecCustomization.setOverrideResultScreenSuccessMessage(""),s.proceedToNextStep(e.data.scanResultBlob)),e=>{this.error=e.error,s.cancel()})}}}}]);